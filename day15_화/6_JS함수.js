함수 예제 (12개)
예제 1: 함수 선언과 호출
콘솔에 '안녕하세요!'를 출력하는 greet 함수를 만들고 호출해 보세요.

예제 2: 매개변수 사용하기
이름(name)을 매개변수로 받아, 콘솔에 '반갑습니다, [name]님!' 형식으로 출력하는 welcome 함수를 만들고, 자신의 이름을 넣어 호출해 보세요.

예제 3: 값 반환하기 (return)
return 'Hello World!'; 코드 한 줄만 들어있는 getHello 함수를 만들고, 호출 결과를 message 변수에 저장한 뒤 콘솔에 출력해 보세요.

예제 4: 매개변수와 반환값 모두 사용하기
숫자 두 개를 매개변수로 받아 그 합을 반환(return)하는 sum 함수를 만들고, sum(10, 20)의 결과를 콘솔에 출력해 보세요.

예제 5: Boolean 값 반환하기
숫자 하나를 매개변수로 받아, 그 숫자가 0보다 크면 true를, 그렇지 않으면 false를 반환하는 isPositive 함수를 만들어 보세요.

예제 6: 객체를 매개변수로 받기
name과 age 속성을 가진 person 객체를 매개변수로 받아, '저는 [name]이고, [age]살입니다.' 형식의 문자열을 콘솔에 출력하는 introduce 함수를 만들어 보세요.

예제 7: 배열을 매개변수로 받기
과일 이름이 담긴 배열을 매개변수로 받아, for 반복문을 사용해 배열의 첫 번째와 마지막 요소를 콘솔에 출력하는 printEnds 함수를 만들어 보세요.

예제 8: 함수 안에서 반복문 사용하기
숫자 n을 매개변수로 받아, 1부터 n까지의 숫자를 한 줄씩 콘솔에 출력하는 countUp 함수를 만들어 보세요.

예제 9: 전역 변수와 지역 변수
let globalText = '전역'; 변수를 선언하세요. printLocal 함수 안에서는 let localText = '지역'; 변수를 선언하고, 
두 변수를 모두 콘솔에 출력해 보세요. 함수 바깥에서는 globalText만 출력되는 것을 확인하세요.

예제 10: 함수로 전역 변수 값 변경하기
let score = 100; 이라는 전역 변수를 만드세요. 호출될 때마다 score를 10점씩 감소시키는 deductPoints 함수를 만들고, 두 번 호출한 뒤 score를 콘솔에 출력해 보세요.

예제 11: HTML과 함수 연결하기 (onclick)
콘솔에 '버튼이 눌렸습니다!' 라고 출력하는 onBtnClick 함수를 만드세요. 이 함수를 HTML <button onclick="onBtnClick()">클릭</button> 에서 호출해 보세요.

예제 12: HTML 입력 값 함수에서 사용하기
HTML <input class="name-input">의 값을 가져와 콘솔에 출력하는 printInputValue 함수를 만들고, 버튼 클릭 시 이 함수가 실행되도록 연결해 보세요.

=================================================================================================================================================================
실습 1: 자기소개 함수 만들기 (참고: 예제 1, 2)
자신의 이름(name)과 사는 도시(city)를 매개변수로 받아, '안녕하세요, 저는 [city]에 사는 [name]입니다.' 라는 문장을 콘솔에 출력하는 myProfile 함수를 만들어 호출해 보세요.

실습 2: 화씨를 섭씨로 변환하기 (참고: 예제 3, 4)
화씨 온도(fahrenheit)를 매개변수로 받아 섭씨 온도로 변환하여 반환(return)하는 toCelsius 함수를 만드세요. (계산식: (화씨 - 32) * 5 / 9)
toCelsius(68)의 결과를 콘솔에 출력해 정확히 20이 나오는지 확인하세요.

실습 3: 성인 인증 함수 (참고: 예제 5)
나이(age)를 매개변수로 받아, 20세 이상이면 true를, 미만이면 false를 반환하는 isAdult 함수를 만드세요. isAdult(25)와 isAdult(17)의 결과를 각각 콘솔에 출력해 보세요.

실습 4: 도서 정보 출력하기 (참고: 예제 6)
아래 book 객체를 사용하여, 책의 정보를 '제목: [title], 저자: [author]' 형식의 문자열로 반환하는 getBookInfo 함수를 만드세요. 함수의 반환값을 콘솔에 출력하세요.
const book = {
  title: 'Cracking the Coding Interview',
  author: 'Gayle Laakmann McDowell'
};

실습 5: 배열의 총합 구하기 (참고: 예제 7, 8)
숫자로 이루어진 배열을 매개변수로 받아, for 반복문을 사용해 모든 요소의 합계를 구하여 반환하는 sumArray 함수를 만드세요. 아래 numbers 배열로 테스트해 보세요.
const numbers = [10, 20, 30, 40, 50];

실습 6: 가장 긴 단어 찾기 (참고: 예제 7, 8)
문자열로 이루어진 배열을 매개변수로 받아, for 반복문을 사용해 가장 긴 단어를 찾아 반환하는 findLongestWord 함수를 만드세요. 아래 words 배열로 테스트해 보세요.
const words = ['apple', 'banana', 'kiwi', 'strawberry'];

실습 7: 게임 점수 관리하기 (참고: 예제 9, 10)
let userScore = 0; 전역 변수를 만드세요. gainScore() 함수는 userScore를 10 증가시키고, loseScore() 함수는 5 감소시킵니다.
gainScore()를 세 번, loseScore()를 한 번 호출한 뒤, 최종 점수를 콘솔에 출력하세요.

실습 8: 간단한 카운터 만들기 (참고: 예제 10, 11)
0이 표시된 <p id="counter">0</p>와, +, - 버튼 두 개를 HTML에 만드세요.
+ 버튼은 increment() 함수를, - 버튼은 decrement() 함수를 onclick으로 호출합니다.
각 함수는 전역 변수 count의 값을 증감시키고, p 태그의 innerHTML을 사용해 화면의 숫자를 갱신해야 합니다.

실습 9: 인사말 생성기 (참고: 예제 11, 12)
이름을 입력할 <input class="user-name">과 '확인' 버튼, 그리고 인사말을 보여줄 <p id="greeting"></p>를 HTML에 만드세요.
'확인' 버튼을 누르면 makeGreeting() 함수가 실행됩니다. 이 함수는 input의 값을 가져와 p 태그의 내용(innerHTML)을 '[입력된 이름]님, 환영합니다!'로 변경해야 합니다.

실습 10: 할 일 목록 출력하기 (참고: 예제 8, 12)
아래와 같은 todoList 배열이 있습니다. '목록 보기' 버튼을 누르면, renderTodos() 함수가 실행되어 todoList의 모든 항목을 <div> 태그 안에 <ul>와 <li>를 사용해 목록 형태로 출력하도록 만드세요.
const todoList = ['자바스크립트 공부', '헬스장 가기', '물 1L 마시기'];
// 출력될 곳: <div id="todo-container"></div>

실습 11: 최고 점수 학생 찾기 (참고: 예제 6, 7, 8)
아래 students 배열에서 가장 높은 점수(score)를 가진 학생의 이름을 찾아 반환하는 findTopStudent 함수를 만드세요.
const students = [
  { name: '김철수', score: 85 },
  { name: '이영희', score: 92 },
  { name: '박민준', score: 78 }
];

실습 12: 상품 목록 페이지 만들기 (참고: 예제 6, 7, 8, 12)
아래 products 배열의 데이터를 사용해, 각 상품을 소개하는 HTML 요소를 동적으로 만들어 페이지에 표시하는 renderProducts 함수를 만드세요.
각 상품은 이름(<h4>), 가격(<p>), 재고(<p>)를 포함한 div로 묶여야 합니다.
const products = [
  { name: '노트북', price: 1200000, stock: 5 },
  { name: '모니터', price: 350000, stock: 12 },
  { name: '키보드', price: 80000, stock: 25 }
];
// 출력될 곳: <div id="product-list"></div>


========================================================================================================================================================  

함수 예제 (기초 개념 확인)
예제 1: 기본 함수 선언 및 호출
'함수 호출 성공!'이라는 메시지를 콘솔에 출력하는 sayHello라는 이름의 함수를 정의하고, 그 함수를 호출하시오.

예제 2: 매개변수를 사용하는 함수
두 개의 숫자(number)를 매개변수로 받아, 그 합을 콘솔에 출력하는 printSum 함수를 정의하시오. printSum(5, 10)을 호출하여 결과를 확인하시오.

예제 3: 값을 반환(return)하는 함수
사용자의 이름을 문자열(string)로 받아, "환영합니다, [이름]님!" 형식의 문자열을 반환하는 getWelcomeMessage 함수를 정의하시오. 함수를 호출한 결과를 변수에 저장하고, 그 변수를 콘솔에 출력하시오.

예제 4: 사각형 넓이 계산 함수
가로와 세로 길이를 매개변수로 받아 사각형의 넓이를 계산하여 반환하는 calculateRectArea 함수를 정의하시오. calculateRectArea(10, 20)의 반환값을 콘솔에 출력하시오.

예제 5: 전역 변수와 지역 변수의 구분
'전역'이라는 값을 가진 scope라는 전역 변수를 하나 만드시오.
checkScope라는 함수 안에서는 '지역'이라는 값을 가진 scope라는 지역 변수를 만들어 콘솔에 출력하시오.
함수를 호출한 뒤, 함수 바깥에서 scope 전역 변수를 다시 콘솔에 출력하여 값이 다른 것을 확인하시오.

예제 6: 함수를 이용한 카운터
0의 값을 가진 counter라는 전역 변수를 만드시오.
호출될 때마다 counter의 값을 1씩 증가시키는 increaseCount 함수를 정의하시오.
함수를 세 번 호출한 뒤, counter의 값을 콘솔에 출력하여 3이 되었는지 확인하시오.

예제 7: for 반복문을 포함한 함수
숫자 n을 매개변수로 받아, 1부터 n까지의 숫자를 콘솔에 차례대로 출력하는 printNumbers 함수를 정의하시오.

예제 8: HTML 버튼과 함수 연결 (onclick)
콘솔에 '버튼이 클릭되었습니다.'라고 출력하는 buttonClicked 함수를 정의하시오.
(HTML) <button onclick="buttonClicked()">눌러보세요</button> 코드를 작성하여 버튼 클릭 시 함수가 실행되는지 확인하시오.

예제 9: prompt와 함수 활용
prompt를 이용해 사용자로부터 이름을 입력받으시오.
입력받은 이름을 매개변수로 받아, 해당 이름이 저장된 userList 전역 배열에 push하는 addUser 함수를 정의하고 호출하시오.

예제 10: 배열을 매개변수로 전달
과일 이름들이 담긴 배열을 매개변수로 받아, for 반복문을 사용하여 배열의 모든 요소를 콘솔에 하나씩 출력하는 printFruits 함수를 정의하시오.

함수 실습 (개념 응용 및 조합)
실습 1: 간단한 계산기
num1, num2, operator (연산자, '+', '-') 세 개의 매개변수를 받는 calculator 함수를 만드시오.
operator가 '+'이면 두 수의 합을, '-'이면 두 수의 차를 콘솔에 출력하시오. (if문 사용)

실습 2: 로그인 기능 흉내내기
savedId와 savedPw라는 전역 변수에 임의의 아이디와 비밀번호를 저장해두시오.
id, pw 두 값을 매개변수로 받는 checkLogin 함수를 정의하시오.
이 함수는 savedId, savedPw와 일치하면 true를, 그렇지 않으면 false를 반환(return)해야 합니다.
함수의 반환값에 따라 콘솔에 "로그인 성공" 또는 "로그인 실패"를 출력하시오.

실습 3: 이름 등록 및 목록 출력
memberList 라는 빈 전역 배열을 만드시오.

register() 함수: HTML input 태그의 값을 가져와 memberList 배열에 push합니다.
printAll() 함수: memberList 배열을 for문으로 순회하며, HTML div 영역에 이름 목록을 innerHTML을 사용하여 출력합니다.
register 함수가 실행된 후에는 항상 printAll 함수가 호출되어 목록이 갱신되도록 하시오.
실습 4: 구구단 출력기
HTML input에 숫자를 입력하고 '출력' 버튼을 누르면, 해당 숫자에 해당하는 구구단이 div 영역에 출력되도록 함수를 구현하시오.

printGugudan() 함수: input에서 값을 가져와 for문을 통해 구구단 문자열을 만들고 innerHTML로 div에 출력합니다.
실습 5: 텍스트 내용 실시간 변경
HTML에 <input type="text">와 <p>여기에 텍스트가 표시됩니다</p>를 만드시오.
input 태그에 onkeyup 이벤트를 사용하여 키보드를 누를 때마다 showText() 함수가 실행되도록 하시오.

showText() 함수: input의 현재 값을 가져와 p 태그의 innerHTML에 즉시 반영합니다.
실습 6: 간단한 투표 기능
'사과', '바나나' 두 개의 버튼과, 각 과일의 득표수를 보여줄 span 태그 두 개를 HTML에 만드시오.
voteApple(), voteBanana() 두 함수를 만들고, 각 버튼의 onclick에 연결하시오.

각 함수는 해당 과일의 득표수를 저장하는 전역 변수의 값을 1씩 증가시키고, 화면의 span 태그 내용도 함께 갱신해야 합니다.
실습 7: 배열에서 특정 이름 찾기
이름들이 들어있는 names 배열과 찾을 searchName을 매개변수로 받는 findName 함수를 만드시오.
함수는 for문을 돌며 names 배열에 searchName이 있는지 확인하고, 있으면 "찾았습니다!", 없으면 "찾지 못했습니다."를 콘솔에 출력하시오.

실습 8: HTML 리스트(ul, li) 동적 생성
todoList라는 할 일 목록이 담긴 전역 배열을 만드시오. (예: ['장보기', '운동하기'])
renderList() 함수를 정의하시오. 이 함수는 todoList 배열을 순회하며 <li>할 일 내용</li> 형태의 HTML 문자열을 만듭니다.
최종적으로 이 문자열을 HTML <ul> 태그의 innerHTML에 삽입하여 리스트를 화면에 그리시오.

실습 9: 입장료 계산 함수
나이(age)를 매개변수로 받아 입장료를 반환하는 getTicketPrice 함수를 만드시오.

8세 미만: "무료"
8세 이상 19세 이하: "5,000원"
20세 이상: "10,000원"
if-else if-else 문을 사용하여 구현하고, 계산된 가격 문자열을 반환(return)하시오.
실습 10: 회원가입 기능 종합
HTML에 ID, PW를 입력할 input 2개와 '가입' 버튼을 만드시오. 회원 목록을 표시할 div도 만드시오.

회원 정보를 객체 { id: '유저아이디', pw: '1234' } 형태로 저장할 users 전역 배열을 만드시오.
'가입' 버튼 onclick 시 signUp() 함수를 호출합니다.
signUp() 함수는 두 input의 값을 가져와 users 배열에 이미 동일한 ID가 있는지 for문으로 검사합니다.
동일한 ID가 있으면 '이미 존재하는 아이디입니다.'를 콘솔에 출력하고, 없으면 users 배열에 새 회원 객체를 push한 뒤, 회원 ID 목록을 div에 갱신하여 출력합니다.


========================================================================================================================================================  
